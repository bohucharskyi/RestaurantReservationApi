// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationApi.Models;

#nullable disable

namespace ReservationApi.Migrations
{
    [DbContext(typeof(RestaurantReservationContext))]
    partial class RestaurantReservationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservationApi.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ABC Restaurant Address 1",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "DEF Restaurant Address 1",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "GHI Restaurant Address 1",
                            RestaurantId = 3
                        });
                });

            modelBuilder.Entity("ReservationApi.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationApi.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OpeningTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClosingTime = new TimeSpan(0, 23, 0, 0, 0),
                            Name = "ABC Restaurant",
                            OpeningTime = new TimeSpan(0, 15, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            ClosingTime = new TimeSpan(0, 22, 0, 0, 0),
                            Name = "DEF Restaurant",
                            OpeningTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            ClosingTime = new TimeSpan(0, 21, 0, 0, 0),
                            Name = "GHI Restaurant",
                            OpeningTime = new TimeSpan(0, 17, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("ReservationApi.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 1,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 1,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 1,
                            Size = "Large"
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 2,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 7,
                            LocationId = 2,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 8,
                            LocationId = 2,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 9,
                            LocationId = 2,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 10,
                            LocationId = 2,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 11,
                            LocationId = 2,
                            Size = "Large"
                        },
                        new
                        {
                            Id = 12,
                            LocationId = 2,
                            Size = "Large"
                        },
                        new
                        {
                            Id = 13,
                            LocationId = 3,
                            Size = "Small"
                        },
                        new
                        {
                            Id = 14,
                            LocationId = 3,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 15,
                            LocationId = 3,
                            Size = "Medium"
                        },
                        new
                        {
                            Id = 16,
                            LocationId = 3,
                            Size = "Large"
                        });
                });

            modelBuilder.Entity("ReservationApi.Models.Location", b =>
                {
                    b.HasOne("ReservationApi.Models.Restaurant", "Restaurant")
                        .WithMany("Locations")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ReservationApi.Models.Reservation", b =>
                {
                    b.HasOne("ReservationApi.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("ReservationApi.Models.Table", b =>
                {
                    b.HasOne("ReservationApi.Models.Location", "Location")
                        .WithMany("Tables")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("ReservationApi.Models.Location", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("ReservationApi.Models.Restaurant", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("ReservationApi.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
